ex100 System.out.println("A) 
	--->A를 출력
-----------------------------------
ex101 byte, short, int, long, float, double + 변수;
	--->를 통해서 변수선언
-------------------------------------
ex102 문자열 String 변수 ="AAAA"
	문자     char 변수 = 'A'
	--->를 통한 문자열과 문자
-------------------------------------
ex103 변수에 값을 대입하고 변수끼리 연산이 가능하고
          아래 열로 갈 수록 연산이 된 값이 저장
	ex)int num = 5;    //num=5
	int num2 = num;  //num2=5
	num = num + 1;  //num = 6 이때부터 num값은 6으로 바뀜
------------------------------------------
ex104 정수형 int에는 실수를 담을 수 없고
	char을 쓰려면 큰따옴표(") 가 아닌 작은따옴표에 담아야함 (')
-------------------------------------------
ex105 byte 함수는 -128~127 까지 표현가능한데
	127에서 ++1을 늘려보면 천장을 뚫고 내려온 현상으로
	-128이 표현됨    -->   126,127,-128,-127느낌으로
-------------------------------------------
ex106 -->ex103에서는 내려올수록 저장된 값이 바뀐다고 하였지만
	final int a 처럼 final을 집어넣으면 상수 선언이 되었기 때문에
	값이 변하지 않음. 또한 참고로 final 함수에는 
	상수의 이름을 대문자로 쓰는 사람들이 많음
	---->고로 습관화하자
------------------------------------------
ex107  -----정수-------   ----실수----
	byte short int long    float double
 	  1      2      4    8         4        8(bit)
 값 중에서 비트가 적은 자료형에서 큰 비트로 넘어갈 수 있지만
자료 손실우려 때문 큰 비트에서 작은 비트로는 넘어갈 수 없음
-----------------------------------------
ex201  day1 복습 내용
----------------------------------------
ex202 double or float 실수형 자료형에서 정수를 지정해도
	값은 자동으로 소수점이 붙은 소수로 출력
-------------------------------------------
ex203 int형을 더한 값을 double 혹은 float같은 실수자료형으로
	저장해도 실수값으로 나옴(자동형변환 반대로는 불가능)
------------------------------------------
ex204  int num = 237;
	System.out.println(num % 10); //1의 자리
	System.out.println(num / 10 % 10); //10의 자리
	System.out.println(num / 100); //100의 자리
	알아두면 좋은 것.
	또한 a변수에 실수값을
	b변수에 정수값을 넣고 a+b를 더하면 자동형변환으로 인한
	큰 데이터값으로 추출이 됨
-----------------------------------------
ex205  a += b ---> a = a + b 와 같음 4칙연산이 다 가능
----------------------------------------
ex206 부등호 > ~가 크다
	<= 크거나 작거나 같다
	== 같다
	!= 아니다     	등 부등호의 값은 true or false
----------------------------------------
ex207 && : and연산
            ||  : or 연산 
            ex) a가 1 또는 4 또는 7'이고' b는 0보다 큰가?
	            or       or      and            or
System.out.println((a==1)||(a==4)||(a==7)&&b>0);
-----------------------------------------
ex208 스캐너 객체 생성
	Scanner sc = new Scanner(System.in);
          스캐너를 만들기 위한 함수
(클래스 위 쪽으로) import java.util.Scanner;
           스캐너를 받기 위해서
	sc.next변수(); 값을 쓰면 가능
 	ex) int num1 = sc.nextInt();
-----------------------------------------
ex209 ++,--연산
	num++로 붙으면 다음 열부터 +1
	++num으로 붙으면 그 즉시 +1

           조심해야 할 것
	int num4 = num--; 인 것에서는
	당장 num-- 는 num값인데
	num4는 num값을 받은 거기 때문에
	num이 5라고 가정하에
	--num4값을 출력해도 4가 나옴
-----------------------------------------
ex210   __a__ ? __b__ : __c__ 조건문
	a가 참이면 b
	a가 거짓이면 c를 실행
 cf) 짝수를 나타낼 수 있는 방법은
	a%2==0 ? "짝수" : "홀수"
	짝수는 2로 나누었을 때 몫이 0이기 때문
-----------------------------------------
ex211 if else 문
	if(조건) { 조건이 참이면 실행} --->거짓이면 조건2
	else if(조건2) { 조건2가 참이면 실행}
	else{조건2가 거짓이면 실행}
-----------------------------------------
ex212 for반복문
         for(초기화식; 조건식; 증감식){
	System.out.println(출력내용);
}
        초기화 값부터 조건이 불만족하기 까지 증감식에 대응
ex) 7 4 1 을 출력하고 싶다.
      for( i = 7; i >=1; i -= 3) {
	System.out.println(i)
}
------------------------------------------
ex400 변수의 선언 : 데이터 타입 + 변수이름
	ex) int num;
           변수의 초기화 (변수에 값을 최초로 저장하는)
	ex) num = 5;
---------------------------------------
ex401 아스키코드표 
            char에 아스키코드에 맞는 값을 대입해서 출력하면
         문자를 출력할 수 있다.
      
	강제형변환
	(자료형)클래스;
   	ex) float num = 3.333f;
	num = (int) num; --> 3 (소수는 다 자름)
-------------------------------------
ex402 같은 바이트의 값이라도 문자열과 int형은
 	자동형변환 안됨
--------------------------------------
ex403 실수에서는 근삿값을 표현하기 때문에  
          늘 오차가 존재
         ex) 0.1을 백번 더하면 오차가 0.000002가 생긴다.
---------------------------------------
ex404 byte와 byte를 더하면 각 숫자들이
	int로 자동 형변환 후 계싼이 되고
 	다시 byte로 넘어와야 되는데
	그러려면 자료형이 부족한 byte로
	묵시적 형변환을 해야한다.
	ex)byte b1 = 100;
	     byte b2 = 10;
	byte b3 = (byte)(b1+b2);
----------------------------------------
ex406 진수 바꾸기 책참고
-------------------------------------
ex500 
화씨온도를 입력했을 떄 섭씨온도로 자동계산하여 
나오게 하기      자바 참고
----------------------------------------
ex502 삼항연산자를 사용해서 값 3개 중에 max값을 사용하기
          만들어놓은 클래스 뿐 아니라 다른 방법
          int a= 17;
          int b = 25;
          int c = 8;
          int d = (a>b) ? a : b;
          int e = (d>c) ? d ; c;
---------------------------------------
ex503 문자의 비교는 ==이 되지만
	문자열의 비교는 .equals() 로 해야된다.
------------------------------------------
ex600 삼항 연산자를 이용해 최댓값 구하기
	중앙값 구하기
-------------------------------------------
ex601 입력을 했을 때 절대값을 구하기.
-------------------------------------------------------
ex602 비트연산자 >> , << , >>>
	빈자리를 원래 부호, 0 ,0 으로 채움
-----------------------------------------------------
ex603 예제1.	 정수 값 하나를 입력 받아서,
//	 10보다 크고 30보다 작은지 판단해서 출력
//	 (실행결과의 예) 정수 입력 : 17
//	 	17은 10보다 크고 30보다 작은 수임
//	 (실행결과의 예) 정수 입력 :38
//	 	38은 10보다 크고 30보다 작은 수가 아님
----------------------------------------------------------
ex604 90점 이상 100점 이하 : A학점
//	80점 이상 90점 미만: B학점
//	70점 이상 80점 미만 : C학점
//	60점 이상 70점 미만 : D학점
//		60점 미만 : F학점 출력
------------------------------------------------------------
ex605 ex604를 switch case 문장을 써서.
--------------------------------------------------------
ex606 do-while for while 을 이용해서 1.2.3.4 출력
---------------------------------------------------------
 ex7??은 다 반복문 복습&예제
--------------------------------------------------------------



































