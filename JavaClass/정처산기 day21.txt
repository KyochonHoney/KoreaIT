정처산기 day21
지역 변수(Local Variable)
[정리] 지역변수의 유효범위 (Scope)
	1. for문의 괄호() 안에서 선언 --> 해당for문 안에서만 살아있음
	2. if문의 중괄호{} 안에서 선언 --> 해당if문의 중괄호 안에서만 살아있음
	3. 메서드 중괄호{} 안에서 선언 --> 해당 메서드 안에서만 살아있음
	4.메서드의 파라미터는 지역변수 --> 해당 메서드 중괄호{} 안에만 살아있음

         javac.exe   java.exe(JVM)에서 실행
          [ctrl+s]    [ctrl+f11] ->call   
.java -> 컴파일 -> .class 

실행을 어떻게 하냐면 파일을 읽는 법이 아니라 (파일을 읽는 파이프라인이 있는 게 아니라)
메모리영역으로 들어간 후 메모리를 읽듯이 실행 
메모리영역 --> JVM이 코드를 이런 메모리 영역에서 관리함
	class 영역(static)
	stack 영역(지역변수)  
	Heap 영역(객체)	

[정리] 변수의 종류
	-저장하는 값의 성격에 따라
	1) 기본데이터타입 변수 (8가지 변수)
	2) '참조변수'
	 -->암기 	
	-만들어지는 위치(영역)에 따라
	1) 지역변수 --> Stack Area
	2) 객체변수 --> Heap Area	
	3) static 변수 -> Class Area
------------------------------------------------------------------	
메서드 오버로딩(Method Overloading)
	둘 이상의 메서드를 정의할 때.
	둘이 같은 이름을 써서 정의할 수 있음.
암기 --> 파 개 타 ->파라미터의 개수가 다르거나 타입이 다르거나

https://docs.oracle.com/en/java/javase/11/docs/api/
	--<
	ex) m(int n)
	    m(int n, int m)
	     m(string s)  다 가능
	Ex) main:
	   int num = 5;
	   int num = 15;  -->ERR(변수의 중복 선언)	

	Ex) void m() {...}
	    void m() {...} -->ERR.(메서드의 중복 정의)
	그런데,
	Ex) void m() {...}
 	    void m(int n) {...} -->이건 가능 (메서드 오버로딩)
	main() {
		m();
		m(10);
	}
---------------------------------------------------------------------
Ex2102 메서드 오버로딩

Q2101 메서드의 이름이 'practice'로 동일한 메서드 2개를 작성해보세요.
	-메서드1 : 리턴타입이 int
		 파라미터의 타입이 int
		 파라미터로 전달받은 값에 10을 더한 값을 리턴.
	-메서드2 : 리턴타입이 double
		 파라미터의 타입이  double
		 파라미터로 전달받은 값에 10을 뺀 값을 리턴.
-----------------------------------------------------------------
Q2102 .메서드의 이름이 'printmessage'이고
	파라미터가 각각 int,double,String인 3개의 메서드를 작성해보시오
	각각 "정수형인 메서드","실수형인 메서드","문자열인 메서드"출력
-------------------------------------------------------------------
클래스(Class)
Ex2103  클래스 생성해보기 

Ex2104 Class Point 

Ex2105 class Circle
실행결과의 예 ) 반지름 값을 입력 : 10
		원의 넓이 : 314.0




























