정처산기 day38

Design Pattern = Singleton Pattern
생성자가 여러 차례 호출되더라도 실제로 생성되는 객체는 하나이고 최초 생성 이후에 호출된 생성자는 최초의 생성자가 생성한 객체를 리턴
-------------------------------------------------------------
Ex01 Singleton Pattern

---------------------------------------------------------------
Ex02 Cookie, Session
[정리]
쿠키 (Cookie)
	-클라이언트(웹브라우저)에 저장되는 데이터
	-웹페이지를 방문할 때마다 이전에 저장된 내용을 	쿠키에서 참조 가능.
	-유효 기간 -> 자동 소멸
	- .jsp:
	  1) 설정 (write)
		Cookie cookie = new Cookie(이름, 값);
	  	response.addCookie(cookie);
	  2) 참조 (read)
		Cookie[] cookies = request.getCookies();
		for(Cookie c : cookies) {
		    String name = c.getName();
		    String value = c.getValue();
		}
	  3) .addCookie() --> add or replace개념(Update)
	  4) 삭제 : --> 쿠키의 수명을 0으로 설정하면삭제됨
	//.setMaxAge(); 호출 후 . addCookie()호출
세션 (Session)
	- 서버에 저장되는 데이터.
	- 웹페이지를 방문할 때마다 이전에 저장된 내용을 세션에서 참조 가능
	- 쿠키보다 안전함.
	
URL 인코딩, URL디코딩
	- java.net.URLEncoder 클래스의 encode() 메서드
	- java.net.URLDecoder 클래스의 decode() 메서드
-----------------------------------------------------
[정리] forward / redirect
	-forward : 서버 안에서의 이동 
	-> 클라이언트는 '이동'사실을 모르고 있음
	-> 같은 'context path'내에있는리소스로만이동가능
  	- 체크1) "request."
	- 체크2) "...(request,response)"
	
	-redirect : 웹브라우저가 응답을 받으면 즉시 해당 URL로 다시 요청을 보내도록 하는 방식
	response.sendRedirect("b,jsp");
	- 체크1) "response."
	- 체크2) 웹브라우저에 표시되는 URL.