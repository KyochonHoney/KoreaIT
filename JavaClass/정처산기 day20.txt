Q2001(고급)
	마방진
	1)난수 발생 (중복 값 없이) -->테스트 : 마방진인지?
	2) 수학적인 규칙을 따라.

	0,0  0,1  0,2
	1,0  1,1  1,2
	2.0  2.1  2.2
-------------------------------------------------------------
Ex2001 재귀호출 Recursive CAll
	-그 자체로서 [고급]임
	 (메서드에서 자기 자신을 부르는 것)
	stackOverFlow 
---------------------------------------------------------
Ex2002 factorial 팩토리얼;	1
-------------------------------------------------
Ex2003 String클래스의 메서드들 중 3개만 가볍게
	Ex) String str = "Hello";
	[정리]
	.lenth() : 문자열의 길이를 리턴 
	.charAt(idx) : 해당 인덱스 위치에 있는 문자를 리턴
	☆중요.subString(a) : 인덱스가 a부터 끝까지의 부분문자열.
	☆중요.subString(a , b) : 인덱스가 a부터 b-1까지
----------------------------------------------------
Q2003.	연습.
	문자열 하나를 파라미터로 받아서
	2진수 숫자가 맞는지 여부를 판단하여
	2진수 숫자가 맞으면 true를, 아니면 false를 리턴하는 메서드
	checkBinaryStr()을 작성해보세요. // main()은 알아서.

	(실행결과의 예) 2진수 숫자를 입력 : 10100011 (엔터)
			"10100011"은 2진수 숫자가 맞음.
	(실행결과의 예) 2진수 숫자를 입력 : 10102000 (엔터)
			"10102000"은 2진수 숫자가 아님.
				
	Hint. sysout("\"");
----------------------------------------------------
Q2004.	연습.
	문자열 하나를 파라미터로 받아서
	16진수 수가 맞는지 여부를 판단하고
	16진수 수가 맞으면 true를, 아니면 false를 리턴하는 메서드
	checkHexStr()을 작성해보세요.  // main()은 알아서.

	(실행결과의 예) 16진수 숫자를 입력 : ABc123 (엔터)
			"ABc123"은(는) 16진수 수가 맞음.
	(실행결과의 예) 16진수 숫자를 입력 : aB1004G (엔터)
			"aB1004G"은(는) 16진수 수가 아님.
-----------------------------------------------------------
Q2005(고급) 문자열을 뒤집는 메서드 reverseStr(String)을 작성해 보세요. //메인은 알아서
	(실행결과의 예) 문자열 입력 : HelloEs
	"HelloES"를 뒤집으면 "SEolleH".
-----------------------------------------------------------
Ex2004(고급) palindrome 앞뒤가 똑같은 거 "정희정" 2
	noon
	racecar
	mom 
-----------------------------------------------------------
Ex2005 피보나치 수열을 재귀호출로 표현
------------------------------------------------------------
Ex2006 최대공약수 (GCD) 3.
	유클리드 호제법 : EX) gcd(119,68)
			= gcd(68, 51) (b, a%b)
			= gcd(51, 17)
			= gcd(17, 0)
			= 17
-----------------------------------------------------
Q1806(고급). 'Caesar Cipher'는 간단한 암호화 기술입니다.
	원문 텍스트의 각 문자가 (순환적으로) 어떤 숫자(n)만큼 더해진 문자가 됩니다.
	예를 들어, n=2라면 'A'는 'C'가 되고, 'B'는 'D'가 되고, 'C'는 'E'가 되며,
	'Y'는 'A'가 되고, 'Z'는 'B'가 되는 식입니다.

	띄어쓰기 없는 문자열 하나를 파라미터로 받아서,
	Caesar Cipher로 암호화한 문자열을 리턴하는 메서드 encodeCarsarCipher(String,int)을 작성해 보세요.  // main()은 알아서.

	(실행결과의 예) n 입력 : 2 (엔터)
			암호화하려는 문자열을 입력 : HelloYG (엔터)
			암호화된 문자열 : JgnnqAI

Q1807(고급). Carsar Cipher로 암호화한 문자열을 파라미터로 받아서, 이를 해석하여 원문 텍스트를 리턴하는 메서드 decodeCarsarCipher(String,int)를 작성하세요.  // main()은 알아서.

	(실행결과의 예) 암호화된 문자열 입력 : JgnnqAI (엔터)
			n 입력 : 2 (엔터)
			원문 문자열 : HelloYG

Q1808(고급). 2진수 4자릿수를 파라미터(String)로 받아서 이에 해당하는 10진수 숫자를 int형으로 리턴하는 메서드 binToDec(String)를 작성해 보세요.  // main()은 알아서.

	(실행결과의 예) 2진수 숫자 입력 : 1100 (엔터)
			2진수 숫자"1100"에 해당하는 10진수 숫자 : 12
	(실행결과의 예) 2진수 숫자 입력 : 1201 (엔터)
			에러 : "1201"은 2진수 숫자가 아님.

-------------------------------------------------------------------------------
Ex1804(고급). palindrome. 4.
	- noon
	- racecar
	- mom

-----------------------------------------------------------------------
피보나치 수열 (재귀호출 ver)

	Fn = Fn-1 + Fn-2
	F1 = F2 = 1
Ex1805.

Ex1806. 최대공약수(GCD)
		119 68

		119 = 7 * 17
		68 = 2 * 2 * 17

Q1809.	※ 유클리드 호제법 : Ex) gcd(119, 68)
(고급)				= gcd(68, 119%68=51)
				= gcd(51, 68%51=17)
				= gcd(17, 0)
				= 17

--------------------------------------------------------------------------
메서드 연습.
Q1810(고급). 파라미터로 정수 값(n) 하나를 받아서, 
	n!을 구하여 리턴하는 메서드 fact()를 작성하고,
	이를 사용하여 int형으로 표현할 수 있는 모든 팩토리얼 값을 출력.
	(실행결과) 	1! = 1
		   	2! = 2
			3! = 6
			...
			11! = 39916800
			12! = 479001600
			13! = int로 표현할 수 있는 범위를 벗어남.

	Hint. int형으로 표현할 수 있는 최대 값 : Integer.MAX_VALUE

Q1811(고급). 파라미터로 정수 값(n)을 하나 받아서,
	피보나치 수열의 n항에 해당하는 값을 리턴하는 메서드 fibo()를 작성하고,
	이를 사용하여 int형으로 표현할 수 있는 모든 피보나치 수열의 값을 출력.

	(실행결과)	fibo(1) = 1
			fibo(2) = 1
			fibo(3) = 2
			...
			fibo(45) = 1134903170
			fibo(46) = 1836311903
			fibo(47) = int로 표현할 수 있는 범위를 벗어남.

Q1812(고급). sine 함수의 값을 리턴하는 메서드를 작성해서
	math.sin() 의 결과와 비교해 보세요.

	※ https://en.wikipedia.org/wiki/Sine_and_cosine
	sin(x) = x - x^3 / 3! + x^5 / 5! - x^7 / 7! + x^9 / 9! - ...

	- 0 (radian. not degree)
	- pi/6
	- pi/4
	- pi/3
	- pi/2
	- pi

(실행결과)	Math.sin(0) = 0.0
		sin(0) : 0.0
		Math.sin(pi/6) = 0.5
		sin(pi/6) = 0.5
		...

----------------------------------------------------------------------

							끝.
 	























