정처산기 W3 Day5.

Today.	3주차 평가 (9:00~12:00
	코드리뷰

※ 다 하신 분은 	①파일 제출('업로드' 폴더) 
		②문제지 이름 쓰고 제출
※ 페널티 
	11:00 이후 제출 -10점
	12:00 이후 제출 -20점
	...
----------------------------------------------------------------------
배열 추가연습문제.
ex1400
1)	아래와 같이 입력한 값들을 배열에 담은 후, 4분 47초
 배열 요소들을 별의 개수라 보고 별들을 출력하는 프로그램을 작성해 보세요.
	(실행결과의 예)	입력할 항목(숫자)의 개수 : 5 (엔터)
	모든 항목을 입력 (spacebar로 구분) : 3 2 5 0 7(엔터)
	0 : ***
	1 : **
	2 : *****
	3 : 
	4 : *******

2) 	[고급] 16진수 4자리 값을 하나 입력 받아서(문자열 입력), 그 2진수 구성을 아래와 같이 출력하는 프로그램을 자것ㅇ하세요. 다음과 같이 주어진 BITS 라는 문자열 배열을 사용하세요.
			final String[] BITS = {
				"0000", "0001", "0010", "0011",
				"0100", "0101", "0110", "0111",
				"1000", "1001", "1010", "1011",
				"1100", "1101", "1110", "1111"
			};
	(실행결과의 예) 16진수 값(4자리)을 입력 : 1a7f (엔터)
			"1a7f"의 이진수 표현 : 0001 1010 0111 1111

				※ 따옴표를 출력 : 문자열 따옴표 안에서 \" 를 사용.
					Ex) sysout("\""); ----> 출력 : "
1401
3)	'간편법'으로 배열 [12, 57, 33, -1] 을 만들고, 3분 3초
	Arrays.toString() 을 사용하여 이 배열을 출력한 후,
	이 배열에서 최대 값, 최소 값을 찾아서 출력.
	(실행결과의 예)	배열 : [12, 57, 33, -1]
			최대 값 (인덱스#1) : 57
			최소 값 (인덱스#3) : -1

참고)	Arrays.clone() : 배열을 '복제' 합니다.
	- 추가공부(하실 분들만) : shallow-copy 와 deep-copy 에 대해서 (구글 블로그 검색)
	- Arrays.clone() 은 shallow-copy 합니다.

4)	위의 참고를 이해하신 분들만:
	배열을 '복제'한 후 두 배열이 같은지 확인 (단, Arrays.clone() 사용 금지)
			※두 배열의 모든 요소에 대해 arr1[i] == arr2[i] 로 확인.
	(실행결과)	arr1 : [12, 57, 33, -1]
			arr2 : [12, 57, 33, -1]
			arr1과 arr2를 비교 : 같음
			※ 배열의 '복제' : 그러니까 새로운 배열을 생성하여
					 모든 요소를 복사해 넣으라는 겁니다
			※ 두 배열이 '같은지' 비교 : 그러니까 두 배열 안에 있는
					모든 요소가 같은지 비교하라는 겁니다

5)	[고급] 아래의 빈 칸에 코드를 작성하여 제시된 실행결과를 만들어 보세요.
	(두 배열을 결합)
		int[] arr1 = { 1, 3, 5, 7 };

		// TODO : 여기에 코드 작성.

		sysout("arr1 : " + Arrays.toString(arr1));
		sysout("arr2 : " + Arrays.toString(arr2));

		int[] arr3;

		// TODO : 여기에 코드 작성.

		sysout("arr3 : " + Arrays.toString(arr3));

	(실행결과)
		arr1 : [1, 3, 5, 7]
		arr2 : [6, 4, 2]
		arr3 : [1, 3, 5, 7, 6, 4, 2]


6)	[고급]	[10, 20, 30, 40, 50] 이라는 배열을 '간편법'으로 만들고,
	위치(인덱스)를 의미하는 정수 값을 입력받아 그 위치의 요소를 삭제.

	(실행결과의 예)	arr : [10, 20, 30, 40, 50]        <-- sysout(Arrays.toString(arr)); 의 실행결과.
			삭제할 요소의 위치 : 3 (엔터)
			arr : [10, 20, 30, 50]            <-- sysout(Arrays.toString(arr)); 의 실행결과.


7)	[고급]	[10, 20, 30, 40, 50] 이라는 배열을 '간편법'으로 만들고,
	위치(인덱스)와 값을 입력받아 그 위치에 그 값을 삽입하는 코드를 작성.

	(실행결과의 예)	arr : [10, 20, 30, 40, 50]     <-- sysout(Arrays.toString(arr)); 의 실행결과.
			입력할 위치 : 3 (엔터)
			입력할 값 : 100 (엔터)
			arr : [10, 20, 30, 100, 40, 50]     <-- sysout(Arrays.toString(arr)); 의 실행결과.


8) 	[고급]	다음의 문자열 배열이 주어져 있을 때,
		String[] words = {
			"KOREA", "INFORMATION", "TECHNOLOGY", "FIGHTING", "YG"
		};

	인덱스를 난수 발생(0~4 사이의 정수)해서 이 배열에서 단어(문자열) 하나를 (랜덤하게) 지정하고,
	알파벳을 입력해서 단어를 맞히는 게임을 만들어 보세요.

	(실행결과의 예)	단어에 포함된 알파벳을 입력하거나 정답을 입력 : A (엔터)
			1번째 시도 -> ____A
			단어에 포함된 알파벳을 입력하거나 정답을 입력 : E (엔터)
			2번째 시도 -> ___EA
			단어에 포함된 알파벳을 입력하거나 정답을 입력 : B (엔터)
			3번째 시도 -> (실패)
			단어에 포함된 알파벳을 입력하거나 정답을 입력 : K (엔터)
			4번째 시도 -> K__EA
			단어에 포함된 알파벳을 입력하거나 정답을 입력 : KOREA (엔터)
			5번째 시도 -> 맞혔습니다! KOREA!

9)	[고급] ["빨", "주", "노", "초", "파", "남", "보"] 라는 배열을 만들고,
		이 배열을 오름차순으로 정렬(Ex. 버블 정렬 사용)한 후 
		Arrays.toString()을 사용해서 출력해 보세요. (단, Arrays.sort() 사용 금지)
		(실행결과) 정렬 전 : [빨, 주, 노, 초, 파, 남, 보]
			   정렬 후 : [남, 노, 보, 빨, 주, 초, 파]

					※ 문자열의 오름차순 정렬
					  "문자열.compareTo(문자열)"을 사용하세요.
					   ex) "AB22".compareTo("CB22") --> (-)값
					   ex) "DEF".compareTo("DEA") --> (+)값

10)	[고급]	크기가 7인 정수형 배열을 만들고, 난수 발생(1~10)하여 중복 없는 배열로 만들어 배열의 내용을 출력한 후, 이 배열을 역순으로 만들고 다시 출력합니다. (단, 배열의 출력시 Arrays.toString(arr)을 사용할 것.)
	(실행결과의 예)	배열 출력 : [3, 7, 2, 5, 4, 1, 8] <-- sysout("배열 출력 : " + Arrays.toString(arr)); 의 실행 결과.
			역순 출력 : [8, 1, 4, 5, 2, 7, 3] <-- sysout("역순 출력 : " + Arrays.toString(arr)); 의 실행 결과.

----------------------------------------------------------------------------------
									끝.










